<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE MudletPackage>
<MudletPackage version="1.0">
    <TriggerPackage>
        <TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
            <name>3k Mapper</name>
            <script></script>
            <triggerType>0</triggerType>
            <conditonLineDelta>99</conditonLineDelta>
            <mStayOpen>0</mStayOpen>
            <mCommand></mCommand>
            <packageName>3k Mapper</packageName>
            <mFgColor>#ff0000</mFgColor>
            <mBgColor>#ffff00</mBgColor>
            <mSoundFile></mSoundFile>
            <colorTriggerFgColor>#000000</colorTriggerFgColor>
            <colorTriggerBgColor>#000000</colorTriggerBgColor>
            <regexCodeList/>
            <regexCodePropertyList/>
            <TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                <name>3k Mapper</name>
                <script></script>
                <triggerType>0</triggerType>
                <conditonLineDelta>0</conditonLineDelta>
                <mStayOpen>0</mStayOpen>
                <mCommand></mCommand>
                <packageName></packageName>
                <mFgColor>#ff0000</mFgColor>
                <mBgColor>#ffff00</mBgColor>
                <mSoundFile></mSoundFile>
                <colorTriggerFgColor>#000000</colorTriggerFgColor>
                <colorTriggerBgColor>#000000</colorTriggerBgColor>
                <regexCodeList/>
                <regexCodePropertyList/>
                <TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                    <name>3k Room Description</name>
                    <script></script>
                    <triggerType>0</triggerType>
                    <conditonLineDelta>0</conditonLineDelta>
                    <mStayOpen>0</mStayOpen>
                    <mCommand></mCommand>
                    <packageName></packageName>
                    <mFgColor>#ff0000</mFgColor>
                    <mBgColor>#ffff00</mBgColor>
                    <mSoundFile></mSoundFile>
                    <colorTriggerFgColor>#000000</colorTriggerFgColor>
                    <colorTriggerBgColor>#000000</colorTriggerBgColor>
                    <regexCodeList/>
                    <regexCodePropertyList/>
                    <Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                        <name>roomexits</name>
                        <script>tmap.exits=&quot;&quot;
tmap.roomdesc=string.trim(tmap.roomdesc)
if (matches[6]) then
	if (string.find(matches[6],&quot;§&quot;)) then	
		local match = matches[6]
		tmap.exits=string.trim(string.sub(match,1,string.find(match,&quot;§&quot;)-2))
		disableTrigger(&quot;multipleRoomExits&quot;)
		tmap:processExits(tmap.exits)
	else
		tmap.exits=matches[6]
		enableTrigger(&quot;multipleRoomExits&quot;)
	end
else
	tmap:processExits(nil)
end
disableTrigger(&quot;roomdescription&quot;)
disableTrigger(&quot;roomexits&quot;)</script>
                        <triggerType>0</triggerType>
                        <conditonLineDelta>1</conditonLineDelta>
                        <mStayOpen>0</mStayOpen>
                        <mCommand></mCommand>
                        <packageName></packageName>
                        <mFgColor>#ff0000</mFgColor>
                        <mBgColor>#ffff00</mBgColor>
                        <mSoundFile></mSoundFile>
                        <colorTriggerFgColor>#000000</colorTriggerFgColor>
                        <colorTriggerBgColor>#000000</colorTriggerBgColor>
                        <regexCodeList>
                            <string>(((\s+There (are|is) \w+ obvious exit.?:) (.+))|No obvious exits.¡?)</string>
                        </regexCodeList>
                        <regexCodePropertyList>
                            <integer>1</integer>
                        </regexCodePropertyList>
                    </Trigger>
                    <Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="yes" isColorTriggerFg="yes" isColorTriggerBg="yes">
                        <name>roomdescription</name>
                        <script>if matches[1] then
	tmap.roomdesc = tmap.roomdesc..matches[1]..&quot;\n&quot;
end
setTriggerStayOpen(&quot;roomdescription&quot;, 1)</script>
                        <triggerType>0</triggerType>
                        <conditonLineDelta>1</conditonLineDelta>
                        <mStayOpen>1</mStayOpen>
                        <mCommand></mCommand>
                        <packageName></packageName>
                        <mFgColor>#ff0000</mFgColor>
                        <mBgColor>#ffff00</mBgColor>
                        <mSoundFile></mSoundFile>
                        <colorTriggerFgColor>#808000</colorTriggerFgColor>
                        <colorTriggerBgColor>#000000</colorTriggerBgColor>
                        <regexCodeList>
                            <string>FG8BG2</string>
                            <string>^(.+)$</string>
                        </regexCodeList>
                        <regexCodePropertyList>
                            <integer>6</integer>
                            <integer>1</integer>
                        </regexCodePropertyList>
                    </Trigger>
                    <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="yes" isColorTriggerFg="yes" isColorTriggerBg="yes">
                        <name>roomname</name>
                        <script>local match = matches[2]
tmap.compassSpace = string.len(matches[2])
tmap.roomname = string.trim(matches[2])
tmap.roomdesc = &quot;&quot;
if tmap.mapfollow and tmap.findme == nil and tmap.pWimpy == nil and tmap.searchMode == nil
	 and tmap.updateRoom == nil then
	tmap:onFollow(nil)
elseif tmap:mapon() or tmap.findme or tmap.pWimpy or tmap.searchMode or tmap.updateRoom then
	enableTrigger(&quot;spacer&quot;)
	enableTrigger(&quot;roomexits&quot;)
end
if roomContents then
	roomContents[&quot;objects&quot;] = {}
end
tmap.roomEntered = true</script>
                        <triggerType>0</triggerType>
                        <conditonLineDelta>11</conditonLineDelta>
                        <mStayOpen>0</mStayOpen>
                        <mCommand></mCommand>
                        <packageName></packageName>
                        <mFgColor>#00fff7</mFgColor>
                        <mBgColor>#000000</mBgColor>
                        <mSoundFile></mSoundFile>
                        <colorTriggerFgColor>#00ff00</colorTriggerFgColor>
                        <colorTriggerBgColor>#000000</colorTriggerBgColor>
                        <regexCodeList>
                            <string>3?s?&gt;?`?(.+)(\s+)?¡</string>
                        </regexCodeList>
                        <regexCodePropertyList>
                            <integer>1</integer>
                        </regexCodePropertyList>
                    </Trigger>
                    <Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                        <name>spacer</name>
                        <script>enableTrigger(&quot;roomdescription&quot;)
disableTrigger(&quot;spacer&quot;)</script>
                        <triggerType>0</triggerType>
                        <conditonLineDelta>3</conditonLineDelta>
                        <mStayOpen>0</mStayOpen>
                        <mCommand></mCommand>
                        <packageName></packageName>
                        <mFgColor>#ff0000</mFgColor>
                        <mBgColor>#ffff00</mBgColor>
                        <mSoundFile></mSoundFile>
                        <colorTriggerFgColor>#000000</colorTriggerFgColor>
                        <colorTriggerBgColor>#000000</colorTriggerBgColor>
                        <regexCodeList>
                            <string>^$</string>
                        </regexCodeList>
                        <regexCodePropertyList>
                            <integer>1</integer>
                        </regexCodePropertyList>
                    </Trigger>
                    <Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                        <name>multipleRoomExits</name>
                        <script>local match = matches[2]
if (match and string.find(match,&quot;§&quot;)) then
	tmap.exits=tmap.exits..string.trim(string.sub(match,1,string.find(match,&quot;§&quot;)-2))
	disableTrigger(&quot;multipleRoomExits&quot;)
	tmap:processExits(tmap.exits)
else
	tmap.exits=tmap.exits..match
end</script>
                        <triggerType>0</triggerType>
                        <conditonLineDelta>0</conditonLineDelta>
                        <mStayOpen>0</mStayOpen>
                        <mCommand></mCommand>
                        <packageName></packageName>
                        <mFgColor>#ff0000</mFgColor>
                        <mBgColor>#ffff00</mBgColor>
                        <mSoundFile></mSoundFile>
                        <colorTriggerFgColor>#000000</colorTriggerFgColor>
                        <colorTriggerBgColor>#000000</colorTriggerBgColor>
                        <regexCodeList>
                            <string>[\s]{10,}(.*)</string>
                        </regexCodeList>
                        <regexCodePropertyList>
                            <integer>1</integer>
                        </regexCodePropertyList>
                    </Trigger>
                </TriggerGroup>
                <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                    <name>WimpyNoDir</name>
                    <script>tmap.pWimpy=1
tWimpyDisable()
send(&quot;brief map&quot;)
send(&quot;look&quot;)</script>
                    <triggerType>0</triggerType>
                    <conditonLineDelta>0</conditonLineDelta>
                    <mStayOpen>0</mStayOpen>
                    <mCommand></mCommand>
                    <packageName></packageName>
                    <mFgColor>#ff0000</mFgColor>
                    <mBgColor>#ffff00</mBgColor>
                    <mSoundFile></mSoundFile>
                    <colorTriggerFgColor>#000000</colorTriggerFgColor>
                    <colorTriggerBgColor>#000000</colorTriggerBgColor>
                    <regexCodeList>
                        <string>Your legs run away with you!</string>
                    </regexCodeList>
                    <regexCodePropertyList>
                        <integer>0</integer>
                    </regexCodePropertyList>
                </Trigger>
                <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                    <name>Can't go trigger</name>
                    <script>table.remove(tmap.comTable,1)</script>
                    <triggerType>0</triggerType>
                    <conditonLineDelta>0</conditonLineDelta>
                    <mStayOpen>0</mStayOpen>
                    <mCommand></mCommand>
                    <packageName></packageName>
                    <mFgColor>#ff0000</mFgColor>
                    <mBgColor>#ffff00</mBgColor>
                    <mSoundFile></mSoundFile>
                    <colorTriggerFgColor>#000000</colorTriggerFgColor>
                    <colorTriggerBgColor>#000000</colorTriggerBgColor>
                    <regexCodeList>
                        <string>You cannot go</string>
                    </regexCodeList>
                    <regexCodePropertyList>
                        <integer>0</integer>
                    </regexCodePropertyList>
                </Trigger>
                <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                    <name>Too dark</name>
                    <script>tmap.roomEntered = true
if tmap:mapon() then
	tmap:echo(&quot;TURN ON A LIGHT!!!!!!!!&quot;)
	tmap.exits=&quot;&quot;
	tmap.roomdesc=&quot;&quot;
	tmap.roomname=&quot;A Dark Room&quot;
	tmap:processExits(nil)
elseif tmap.mapfollow and tmap.findme == nil then
	tmap:onFollow(nil)
end</script>
                    <triggerType>0</triggerType>
                    <conditonLineDelta>99</conditonLineDelta>
                    <mStayOpen>0</mStayOpen>
                    <mCommand></mCommand>
                    <packageName></packageName>
                    <mFgColor>#ff0000</mFgColor>
                    <mBgColor>#ffff00</mBgColor>
                    <mSoundFile></mSoundFile>
                    <colorTriggerFgColor>#000000</colorTriggerFgColor>
                    <colorTriggerBgColor>#000000</colorTriggerBgColor>
                    <regexCodeList>
                        <string>It is too dark</string>
                    </regexCodeList>
                    <regexCodePropertyList>
                        <integer>1</integer>
                    </regexCodePropertyList>
                </Trigger>
                <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                    <name>Follower</name>
                    <script>local player = matches[2]
if player == tmap.leader then
	tmap:onFollow(matches[3])
end</script>
                    <triggerType>0</triggerType>
                    <conditonLineDelta>99</conditonLineDelta>
                    <mStayOpen>0</mStayOpen>
                    <mCommand></mCommand>
                    <packageName></packageName>
                    <mFgColor>#ff0000</mFgColor>
                    <mBgColor>#ffff00</mBgColor>
                    <mSoundFile></mSoundFile>
                    <colorTriggerFgColor>#000000</colorTriggerFgColor>
                    <colorTriggerBgColor>#000000</colorTriggerBgColor>
                    <regexCodeList>
                        <string>(.+) leaves (.+).</string>
                    </regexCodeList>
                    <regexCodePropertyList>
                        <integer>1</integer>
                    </regexCodePropertyList>
                </Trigger>
                <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                    <name>Wimpy</name>
                    <script>tmap:onFollow(matches[2])</script>
                    <triggerType>0</triggerType>
                    <conditonLineDelta>99</conditonLineDelta>
                    <mStayOpen>0</mStayOpen>
                    <mCommand></mCommand>
                    <packageName></packageName>
                    <mFgColor>#ff0000</mFgColor>
                    <mBgColor>#ffff00</mBgColor>
                    <mSoundFile></mSoundFile>
                    <colorTriggerFgColor>#000000</colorTriggerFgColor>
                    <colorTriggerBgColor>#000000</colorTriggerBgColor>
                    <regexCodeList>
                        <string>Your legs run away with you (.+).</string>
                    </regexCodeList>
                    <regexCodePropertyList>
                        <integer>1</integer>
                    </regexCodePropertyList>
                </Trigger>
            </TriggerGroup>
        </TriggerGroup>
    </TriggerPackage>
</MudletPackage>
<TimerPackage/>
<AliasPackage>
    <AliasGroup isActive="yes" isFolder="yes">
        <name>3k Mapper</name>
        <script></script>
        <command></command>
        <packageName>3k Mapper</packageName>
        <regex></regex>
        <AliasGroup isActive="yes" isFolder="yes">
            <name>3k Mapper</name>
            <script></script>
            <command></command>
            <packageName></packageName>
            <regex></regex>
            <Alias isActive="yes" isFolder="no">
                <name>Purge exit queue</name>
                <script>--[[This will clear the direction queue]]
tmap.comTable = {}
tmap.roomsToWalk = nil
tmap.mapspecial = nil</script>
                <command></command>
                <packageName></packageName>
                <regex>^tmap dirclear$</regex>
            </Alias>
            <Alias isActive="yes" isFolder="no">
                <name>firstroom</name>
                <script>tmap.firstRoom = true
tmap.lastId = nil
tmap.comTable = {}
send(&quot;brief map&quot;)
tmap:echo(&quot;&lt;red&gt;Now enter a cardinal direction to start the mapping process.&lt;reset&gt;&quot;)
if not tmap:mapon() then
	tmap:echo(&quot;&lt;red&gt;Mapping is disabled, use '&lt;cyan&gt;tmap mapon&lt;red&gt;' to enable.&lt;reset&gt;&quot;)
end</script>
                <command></command>
                <packageName></packageName>
                <regex>^tmap firstroom$</regex>
            </Alias>
            <Alias isActive="yes" isFolder="no">
                <name>Set Location</name>
                <script>tmap.roomsToWalk = nil
tmap.speedWalking = 0
local isRoom = getRoomName(matches[2])
if not isRoom then
	tmap:echo(&quot;can't find room&quot;)
else
	tmap:onPlayerMove(matches[2])
end</script>
                <command></command>
                <packageName></packageName>
                <regex>^tmap setroom (\d+)$</regex>
            </Alias>
            <Alias isActive="yes" isFolder="no">
                <name>Room walker</name>
                <script>--[[This will attempt to walk to a given room name or area.  For instance
if you have an area named 'Diablo 2' and you type tmap walk diablo, it will
bring you to diablo 2]]
local entry = matches[2]
if tonumber(entry) then
	entry = tonumber(entry)
	gotoRoom(entry)
	tmap:onPlayerMove(entry)
elseif tmap.mwalkList and tmap.mwalkList[entry] then
	gotoRoom(tmap.mwalkList[entry])
else
	--it's a word, look for it in areas and walk to area
	local tstring = string.lower(entry)
	local atable = getAreaTable()
	local exactmatch = {}
	local pareas = {}
	local eiter = 1
	local piter=1
	for i,v in pairs(atable) do
		local area = string.lower(i)
		if string.match(area, &quot;^&quot;..tstring..&quot;$&quot;) then
			exactmatch[eiter] = {v,i}
			eiter = eiter+1
		end
		if string.find(area, tstring) then
			pareas[piter] = {v,i}
			piter = piter+1
		end
	end
	if #exactmatch == 1 then
		local rooms = getAreaRooms(exactmatch[1][1])
		gotoRoom(rooms[0])
	elseif #pareas == 1 then
		local rooms = getAreaRooms(pareas[1][1])
		gotoRoom(rooms[0])
	else
		tmap:echo(&quot;\n&lt;red&gt; Multiple Matching Areas Found.  Click desired destination&quot;)
		for i,v in pairs(pareas) do
			local room = getAreaRooms(v[1])[0]
			if room then
				echoLink(v[2]..&quot; (&quot;..getRoomName(room)..&quot;)\n&quot;, [[gotoRoom(]]..tostring(room)..[[)]],&quot;&quot;)
			end
		end
		tmap:echo(&quot;&quot;)
	end
end</script>
                <command></command>
                <packageName></packageName>
                <regex>^tmap walk (.+)$</regex>
            </Alias>
            <Alias isActive="yes" isFolder="no">
                <name>Map toggle</name>
                <script>if tmap.mapstatus then
	tmap.mapstatus = nil
	tmap.tMapper = nil
	tmap:echo(&quot;\n MAPPER DISABLED&quot;)
else
	if (matches[2]) then
		tmap.mapstatus = 1
		tmap.mapfollow = nil
		tmap.tMapper = 1
		tmap:echo(&quot;\n TEMPORARY MAPPED ENABLED&quot;)
	else
		tmap.mapstatus = 1
		tmap.mapfollow = nil
		tmap:echo(&quot;\n MAPPER ENABLED&quot;)
	end
end</script>
                <command></command>
                <packageName></packageName>
                <regex>^tmap mapon\s?(.+)?$</regex>
            </Alias>
            <Alias isActive="yes" isFolder="no">
                <name>Show Exits</name>
                <script>--show room exits
tmap:echo(getRoomExits(tmap.lastId))
tmap:echo(&quot;special exits:\n&quot;)
tmap:echo(getSpecialExitsSwap(tmap.lastId))</script>
                <command></command>
                <packageName></packageName>
                <regex>^tmap showexits$</regex>
            </Alias>
            <Alias isActive="yes" isFolder="no">
                <name>Set Room Size</name>
                <script>--sets the size of the room
setRoomSize(matches[2])
tmap:onPlayerMove(matches[2])</script>
                <command></command>
                <packageName></packageName>
                <regex>^tmap setroomsize (\d+)$</regex>
            </Alias>
            <Alias isActive="yes" isFolder="no">
                <name>Mouse Set Location</name>
                <script>tmap.mouseLocation = 1
--makes it so instead of speedwalking you are set to the location you click on</script>
                <command></command>
                <packageName></packageName>
                <regex>^tmap setloc$</regex>
            </Alias>
            <Alias isActive="yes" isFolder="no">
                <name>Delete Room</name>
                <script>--adds rooms to a delete list, use doDelete to actually delete
if tmap.roomsToDelete == nil then
	tmap.roomsToDelete = {}
end
local room
if matches[2] == &quot;clear&quot; then
	tmap.roomsToDelete = {}
	tmap:echo(&quot;deletion list cleared&quot;)
end
if matches[2] then
	room = tonumber(matches[2])
else
	room = tmap.lastId
end
if tmap.roomsToDelete[room] then
	tmap.roomsToDelete[room] = false
	tmap:echo(room..&quot; removed from list&quot;)
else
	tmap.roomsToDelete[room] = true
	tmap:echo(room..&quot; added to list&quot;)
end</script>
                <command></command>
                <packageName></packageName>
                <regex>^tmap delroom\s?(.+)?$</regex>
            </Alias>
            <Alias isActive="yes" isFolder="no">
                <name>Map Follow Toggle</name>
                <script>if tmap.mapfollow then
	tmap.mapfollow = nil
	tmap:echo(&quot;\n MAPPER FOLLOWING DISABLED&quot;)
else
	tmap.mapfollow = 1
	tmap.mapstatus = nil
	tmap:echo(&quot;\n MAPPER FOLLOWING ENABLED&quot;)
end</script>
                <command></command>
                <packageName></packageName>
                <regex>^tmap follow$</regex>
            </Alias>
            <Alias isActive="yes" isFolder="no">
                <name>Map Special Exit</name>
                <script>tmap.specialexitcommand = matches[2]
tmap.specialdirection = matches[3]
if tmap.shortToLong[tmap.specialdirection] then
	tmap.specialdirection = tmap.shortToLong[tmap.specialdirection]
end
tmap.mapspecial = 1
send(tmap.specialexitcommand)</script>
                <command></command>
                <packageName></packageName>
                <regex>^&gt;([^&gt;]+)&gt;(\w+)$</regex>
            </Alias>
            <Alias isActive="yes" isFolder="no">
                <name>Find Me</name>
                <script>--finds you
tmap.comTable = {}
tmap.roomsToWalk = nil
if matches[2] then
	tmap.findme=nil
	return
end
send(&quot;brief map&quot;)
send(&quot;look&quot;)
tmap.findme=1
if tmap.mapstatus then
	tmap.mapstatus = nil
	tmap.tMapper = nil
	tmap:echo(&quot;\n MAPPER DISABLED&quot;)
end</script>
                <command></command>
                <packageName></packageName>
                <regex>^tmap findme\s?(\w+)?$</regex>
            </Alias>
            <Alias isActive="yes" isFolder="no">
                <name>Stop Special Exits</name>
                <script>--[[This will stop mapping special exits if you tried to map one]]
tmap.mapspecial = nil</script>
                <command></command>
                <packageName></packageName>
                <regex>^tmap stopspecial$</regex>
            </Alias>
            <Alias isActive="yes" isFolder="no">
                <name>No HM Portals</name>
                <script>--set the portals to your map to enable this
local forbidden = {[137]=99, [5860]=99, [588]=99, [1081]=99, [1361]=99, [33798]=99}
for i,v in pairs(forbidden) do
	if matches[2] then
		setRoomWeight(i,0)
	else
		setRoomWeight(i,v)
	end
end</script>
                <command></command>
                <packageName></packageName>
                <regex>^tmap portalsoff\s?(.+)$</regex>
            </Alias>
            <Alias isActive="yes" isFolder="no">
                <name>Set Room Cost</name>
                <script>--cost of entering a room
setRoomWeight(tmap.lastId, tonumber(matches[2]))</script>
                <command></command>
                <packageName></packageName>
                <regex>^tmap setrcost (\d+)$</regex>
            </Alias>
            <Alias isActive="yes" isFolder="no">
                <name>Show Room Script</name>
                <script>--shows the commands we send when we enter this room
tmap:echo(tmap:getRoomScript(tmap.lastId))</script>
                <command></command>
                <packageName></packageName>
                <regex>^tmap showscript$</regex>
            </Alias>
            <Alias isActive="yes" isFolder="no">
                <name>Delete Selected Rooms</name>
                <script>for i,v in pairs(tmap.roomsToDelete) do
	if v == tmap.last.id then
		tmap:echo(&quot;&lt;red&gt; Unable to delete the room you are in.&quot;)
	else
		tmap:doRoomDelete(i)
	end
end
tmap.roomsToDelete = {}</script>
                <command></command>
                <packageName></packageName>
                <regex>^tmap doDelete$</regex>
            </Alias>
            <Alias isActive="yes" isFolder="no">
                <name>Color Room</name>
                <script>if tmap.colorMappings[matches[2]] then
	setRoomEnv(tmap.lastId, tmap.colorMappings[matches[2]])
	centerview(tmap.lastId)
else
	tmap:echo(&quot;\n&lt;red&gt;Cannot find color mapping.  Available colors:&quot;)
	for i,v in pairs(tmap.colorMappings) do
		tmap:echo(i)
	end
end</script>
                <command></command>
                <packageName></packageName>
                <regex>^tmap croom (\w+)$</regex>
            </Alias>
            <Alias isActive="yes" isFolder="no">
                <name>show color</name>
                <script>display(getCustomEnvColorTable())</script>
                <command></command>
                <packageName></packageName>
                <regex>^tmap scolor$</regex>
            </Alias>
            <Alias isActive="yes" isFolder="no">
                <name>Show room weight</name>
                <script>display(getRoomWeight(tmap.lastId))</script>
                <command></command>
                <packageName></packageName>
                <regex>^tmap sweight$</regex>
            </Alias>
            <Alias isActive="yes" isFolder="no">
                <name>Block room</name>
                <script>setRoomWeight(tmap.lastId, 99)</script>
                <command></command>
                <packageName></packageName>
                <regex>^tmap broom$</regex>
            </Alias>
            <Alias isActive="yes" isFolder="no">
                <name>Move Player on Map</name>
                <script>--moves a given direction of the map
tmap:onFollow(matches[2])</script>
                <command></command>
                <packageName></packageName>
                <regex>^tmap move (.+)$</regex>
            </Alias>
            <Alias isActive="yes" isFolder="no">
                <name>Move room to new area</name>
                <script>--moves the room you are currently in to a new area
local Name = matches[2]
--find the highest current area id
local areas = getAreaTable()
local zoneId = 0
for i,v in pairs(areas) do
	if v &gt; zoneId then
		zoneId = v
	end
end
zoneId = zoneId+1
setAreaName(zoneId, Name)
setRoomArea( tmap.lastId, zoneId )
local linked = {}
for i,v in pairs(tmap:getAllExits(tmap.lastId)) do
	tmap:roomLabel(tostring(v)..&quot; &quot;..Name)
	local toArea = getRoomAreaName(getRoomArea(v))
	if not linked[toArea] then
		tmap:roomLabel(tmap.lastId..&quot; n 0,1,0 &quot;..toArea)
		linked[toArea] = true
	end
end
tmap:onPlayerMove(tmap.lastId)</script>
                <command></command>
                <packageName></packageName>
                <regex>^tmap movenewarea (.*)$</regex>
            </Alias>
            <Alias isActive="yes" isFolder="no">
                <name>move room to existing area</name>
                <script>--moves room you are in to a new area
local Name = matches[2]
local areas = getAreaTable()
for i,v in pairs(areas) do
	if i == Name then
		zoneId = v
	end
end
setRoomArea( tmap.lastId, zoneId )
tmap.UserArea=zoneId
centerview(tmap.lastId)</script>
                <command></command>
                <packageName></packageName>
                <regex>^tmap movetoarea\s(.*)$</regex>
            </Alias>
            <Alias isActive="yes" isFolder="no">
                <name>Setup Mapper Ansi</name>
                <script>sendSocket(&quot;aset room_short higreen\n&quot;)
sendSocket(&quot;aset room_short_suff reset+¡\n&quot;)
sendSocket(&quot;aset room_long brown\n&quot;)
sendSocket(&quot;aset room_exits yellow\n&quot;)
sendSocket(&quot;aset room_exits_suff reset+§\n&quot;)</script>
                <command></command>
                <packageName></packageName>
                <regex>^tmap mapSetup$</regex>
            </Alias>
            <Alias isActive="yes" isFolder="no">
                <name>Delete rooms from an entire area</name>
                <script>--deletes all rooms in an area
for i,v in pairs(getAreaTable()) do
	if i==matches[2] then
		for j,k in pairs(getAreaRooms(v)) do
			if (k == tmap.lastId) then
				tmap:echo(&quot;&lt;red&gt;Unable to delete room if you are currently in it.&quot;)
			else
				deleteRoom(k)
			end
		end
	end
end</script>
                <command></command>
                <packageName></packageName>
                <regex>^tmap clearArea\s(.*)$</regex>
            </Alias>
            <Alias isActive="yes" isFolder="no">
                <name>Make a brand new area</name>
                <script>local Name = matches[2]
--find the highest current area id
local areas = getAreaTable()
local zoneId = 0
for i,v in pairs(areas) do
	if v &gt; zoneId then
		zoneId = v
	end
end
zoneId = zoneId+1
setAreaName(zoneId, Name)
tmap.UserArea=zoneId
tmap.lastId=nil
tmap:echo(&quot;To create a new room, type 'tmap firstroom' and move&quot;)</script>
                <command></command>
                <packageName></packageName>
                <regex>^tmap newarea\s(.*)$</regex>
            </Alias>
            <Alias isActive="yes" isFolder="no">
                <name>Add Favorite</name>
                <script>--Adds a favorite in your current room.
--If you enter a string like: addFav Shops:Cancer's Shop it will add a new favorite
--under the Shops label
local favs = searchRoomUserData(&quot;favorite&quot;, &quot;&quot;)
local entry = matches[2]
local parent = nil
local name = entry
if (string.find(entry,&quot;:&quot;)) then
	parent = string.match(entry,&quot;[^:]+&quot;)
	name = string.match(entry,&quot;:(.+)&quot;)
end
local highestFav = 0
for i,v in pairs(favs) do
	local sStart = string.find(v,&quot;|||&quot;)
	if sStart then
		local favId = tonumber(string.match(string.sub(v,sStart+3,-1),&quot;(%d+)&quot;))
		if favId &gt;= highestFav then
			highestFav = favId+1
		end
		local fName = string.sub(v, 1, sStart-1)
		if parent and (fName == parent) then
			parent = favId
		end
	end
end
if not parent then
	parent = -1
end
if not tonumber(parent) then
	return
end
tmap:echo(&quot;adding &quot;..name..&quot;under &quot;..parent)
--display(name..&quot;|||&quot;..highestFav..&quot;|||&quot;..tmap.lastId..&quot;|||&quot;..parent)
setRoomUserData(tmap.lastId, &quot;favorite&quot;, name..&quot;|||&quot;..tmap.highestFav..&quot;|||&quot;..tmap.lastId..&quot;|||&quot;..parent)
setupFavorites()</script>
                <command></command>
                <packageName></packageName>
                <regex>^tmap addFav\s(.*)$</regex>
            </Alias>
            <Alias isActive="yes" isFolder="no">
                <name>search Mode</name>
                <script>--automagicvally finds you when you walk around
if matches[2] then
	tmap.searchMode=nil
	return
end
send(&quot;brief map&quot;)
tmap.searchMode = true
tmap.searchCan = {}</script>
                <command></command>
                <packageName></packageName>
                <regex>^tmap searchMode\s?(.+)?$</regex>
            </Alias>
            <Alias isActive="yes" isFolder="no">
                <name>show room scripts</name>
                <script>display(getRoomUserData( tmap.lastId, &quot;script&quot;))
</script>
                <command></command>
                <packageName></packageName>
                <regex>^tmap showScripts$</regex>
            </Alias>
            <Alias isActive="yes" isFolder="no">
                <name>set room script</name>
                <script>tmap:echo(&quot;script for:&quot;..tmap.lastId..&quot; set to&quot;)
tmap:echo(matches[2])
setRoomUserData( tmap.lastId, &quot;script&quot;, matches[2])</script>
                <command></command>
                <packageName></packageName>
                <regex>^tmap setScript (.*)$</regex>
            </Alias>
            <Alias isActive="yes" isFolder="no">
                <name>clear room script</name>
                <script>setRoomUserData( tmap.lastId, &quot;script&quot;, &quot;&quot;)</script>
                <command></command>
                <packageName></packageName>
                <regex>^tmap clearScript$</regex>
            </Alias>
            <Alias isActive="yes" isFolder="no">
                <name>Set room lua script</name>
                <script>display(&quot;lua script for:&quot;..tmap.lastId..&quot; set to&quot;)
display(matches[2])
setRoomUserData(tmap.lastId, &quot;luascript&quot;, matches[2])</script>
                <command></command>
                <packageName></packageName>
                <regex>^tmap luascript (.+)$</regex>
            </Alias>
            <Alias isActive="yes" isFolder="no">
                <name>Add Exit Script</name>
                <script>display(&quot;exit script for:&quot;..matches[2]..&quot;set to&quot;)
display(matches[3])
setRoomUserData(tmap.lastId, &quot;exitScript&quot;..matches[2], matches[3])</script>
                <command></command>
                <packageName></packageName>
                <regex>^tmap exitscript \&quot;(.+)\&quot; (.+)$</regex>
            </Alias>
            <Alias isActive="yes" isFolder="no">
                <name>Show Room Lua Scripts</name>
                <script>display(getRoomUserData(tmap.lastId, &quot;luascript&quot;))
</script>
                <command></command>
                <packageName></packageName>
                <regex>^tmap showluascripts$</regex>
            </Alias>
            <Alias isActive="yes" isFolder="no">
                <name>Clear room lua script</name>
                <script>setRoomUserData(tmap.lastId, &quot;luascript&quot;, &quot;&quot;)</script>
                <command></command>
                <packageName></packageName>
                <regex>^tmap clearluascript$</regex>
            </Alias>
            <Alias isActive="yes" isFolder="no">
                <name>show exit scripts</name>
                <script>for i,v in pairs(tmap:getAllExits(tmap.lastId)) do
	tmap:echo(i..&quot;:&quot;..getRoomUserData(tmap.lastId, &quot;exitScript&quot;..i)..&quot;\n&quot;)
end</script>
                <command></command>
                <packageName></packageName>
                <regex>^tmap showescript$</regex>
            </Alias>
            <Alias isActive="yes" isFolder="no">
                <name>Update Room Description</name>
                <script>--updates a room decription
tmap.updateRoom=true
send(&quot;brief map&quot;)
send(&quot;look&quot;)</script>
                <command></command>
                <packageName></packageName>
                <regex>^tmap updateRoom$</regex>
            </Alias>
            <Alias isActive="yes" isFolder="no">
                <name>Delete Temporary Rooms</name>
                <script>local rooms = searchRoomUserData(&quot;temporary&quot;, 1)
for i,v in pairs(rooms) do
	deleteRoom(i)
end
updateMap()</script>
                <command></command>
                <packageName></packageName>
                <regex>^tmap delTemp$</regex>
            </Alias>
            <Alias isActive="yes" isFolder="no">
                <name>Player Follow</name>
                <script>--sets the person you are following
tmap.leader = matches[2]</script>
                <command></command>
                <packageName></packageName>
                <regex>^tmap follow (.+)$</regex>
            </Alias>
            <Alias isActive="yes" isFolder="no">
                <name>Show Room Info</name>
                <script>tmap:echo(&quot;&lt;yellow&gt;Room Name&quot;)
tmap:echo(&quot;&lt;cyan&gt;&quot;..getRoomName(tmap.lastId))
tmap:echo(&quot;&lt;yellow&gt;Room Desc&quot;)
tmap:echo(&quot;&lt;cyan&gt;&quot;..getRoomUserData(tmap.lastId, &quot;description&quot;))
tmap:echo(&quot;&quot;)
local exits = tmap:getAllExits(tmap.lastId)
local exitStr = &quot;&quot;
for i,v in pairs(exits) do
	exitStr = exitStr..&quot;&lt;reset&gt;&quot;..&quot;&lt;cyan&gt;&quot;..i..&quot;, &quot;
end
tmap:echo(&quot;&lt;yellow&gt;Exits: &quot;..string.sub(exitStr,1,-3))
tmap:echo(&quot;&quot;)
tmap:echo(&quot;&lt;yellow&gt;Commands On Entering Room:&quot;)
tmap:echo(&quot;&lt;cyan&gt;&quot;..getRoomUserData( tmap.lastId, &quot;script&quot;))
tmap:echo(&quot;&lt;yellow&gt;Lua script on Entering Room:&quot;)
tmap:echo(&quot;&lt;cyan&gt;&quot;..getRoomUserData(tmap.lastId, &quot;luascript&quot;))
tmap:echo(&quot;&lt;yellow&gt;Room Exit Scripts:&quot;)
exitStr = &quot;&quot;
for i,v in pairs(exits) do
	local script = getRoomUserData(tmap.lastId, &quot;exitScript&quot;..i)
	if script ~= &quot;&quot; then
		exitStr = exitStr..&quot;&lt;yellow&gt;&quot;..i..&quot;&lt;reset&gt;:&lt;cyan&gt;&quot;..script..&quot;\n&quot;
	end
end
tmap:echo(exitStr)</script>
                <command></command>
                <packageName></packageName>
                <regex>^tmap roominfo$</regex>
            </Alias>
            <Alias isActive="yes" isFolder="no">
                <name>General Help</name>
                <script>tmap:echo(&quot;========== 3Scapes Mapper (and 3k too) ==========&quot;)
tmap:echo(&quot;All commands in the mapper are prepended with&quot;)
tmap:echo(&quot;'&lt;red&gt;tmap&lt;reset&gt;'.  To get started, you need to setup the &quot;)
tmap:echo(&quot;right ansi, which can be accomplished by '&lt;red&gt;tmap &quot;)
tmap:echo(&quot;&lt;red&gt;mapSetup&lt;reset&gt;'.&quot;)
tmap:echo(&quot;&quot;)
tmap:echo(&quot;To get started, we need to make a new area, to do&quot;)
tmap:echo(&quot;this type '&lt;red&gt;tmap newarea areaname&lt;reset&gt;'.  Then we can &quot;)
tmap:echo(&quot;start mapping by typing '&lt;red&gt;tmap firstroom&lt;reset&gt;' and &quot;)
tmap:echo(&quot;going in a direction such as east.  To toggle &quot;)
tmap:echo(&quot;mapping type '&lt;red&gt;tmap mapon&lt;reset&gt;'.  You can also tag &quot;)
tmap:echo(&quot;rooms as tempoary by using '&lt;red&gt;tmap mapon temp&lt;reset&gt;'.&quot;)
tmap:echo(&quot;This is useful in places like D2 which change.  You can also type &quot;)
tmap:echo(&quot;'&lt;red&gt;tmap follow&lt;reset&gt;' to turn off mapping and enter follow &quot;)
tmap:echo(&quot;mode.  For special exits such as up/down.  You can &quot;)
tmap:echo(&quot;use the syntax: &lt;red&gt;&gt;special exit&gt;direction&lt;reset&gt;, for instance &quot;)
tmap:echo(&quot;&lt;red&gt;&gt;in&gt;east&lt;reset&gt; will create a special exit to a room and place &quot;)
tmap:echo(&quot;that room east of your current position.  &lt;red&gt;&gt;out&gt;west&lt;reset&gt; &quot;)
tmap:echo(&quot;will complete the link.  To move the room you are currently in to &quot;)
tmap:echo(&quot;a new area, use &lt;red&gt;tmap movenewarea areaname&lt;reset&gt;.&quot;)
tmap:echo(&quot;&quot;)
tmap:echo(&quot;There are a ton of aliases you can use, which you can find in the &quot;)
tmap:echo(&quot;3K Mapper folder.  Some useful ones you might need(all these are &quot;)
tmap:echo(&quot;prepended with tmap): '&lt;red&gt;findme&lt;reset&gt;', '&lt;red&gt;dirclear&lt;reset&gt;',&quot;)
tmap:echo(&quot;'&lt;red&gt;setroom xxx&lt;reset&gt;', '&lt;red&gt;roominfo&lt;reset&gt;', '&lt;red&gt;follow&lt;reset&gt;.&quot;)</script>
                <command></command>
                <packageName></packageName>
                <regex>^tmap$</regex>
            </Alias>
            <Alias isActive="yes" isFolder="no">
                <name>Room exit trigger setup</name>
                <script>--this is more or less a shortcut for the common use of an exit script:
setRoomUserData(tmap.lastId, &quot;exitScript&quot;..matches[2], &quot;tempTrigger(&quot;..matches[3]..&quot;, [[tmap:onFollow(nil)]],true)&quot;)</script>
                <command></command>
                <packageName></packageName>
                <regex>^tmap automove &quot;(.+)&quot; .+$</regex>
            </Alias>
            <Alias isActive="yes" isFolder="no">
                <name>clear room exit script</name>
                <script>setRoomUserData(tmap.lastId, &quot;exitScript&quot;..matches[2], &quot;&quot;)</script>
                <command></command>
                <packageName></packageName>
                <regex>^tmap clearexit (.+)$</regex>
            </Alias>
            <Alias isActive="yes" isFolder="no">
                <name>Pause speedwalk</name>
                <script>setRoomUserData(tmap.lastId, &quot;exitScript&quot;..matches[2], &quot;tmap.moveStop=1;tempTrigger(&quot;..matches[3]..&quot;, [[tmap.moveStop=nil;speedWalkPath = tmap.roomsToWalk;doSpeedWalk()]],true)&quot;)</script>
                <command></command>
                <packageName></packageName>
                <regex>^tmap pauseUntil &quot;(.+)&quot; (.+)$</regex>
            </Alias>
            <Alias isActive="yes" isFolder="no">
                <name>Create a looping exit</name>
                <script>local dir = tmap.getDirNum(matches[2])
if not dir then
	tmap:echo(&quot;&lt;red&gt;Can't find the direction &quot;..matches[2])
end
setExit(tmap.lastId, tmap.lastId, dir)</script>
                <command></command>
                <packageName></packageName>
                <regex>^tmap loopexit (.+)$</regex>
            </Alias>
            <Alias isActive="yes" isFolder="no">
                <name>Move a label</name>
                <script>if not matches[2] then
	tmap:echo(&quot;Syntax: tmap movelabel &lt;labelnum&gt; &lt;direction&gt; &lt;magnitude&gt;&quot;)
	tmap:echo(&quot;If there is only one label in a room, labelnum is optional.&quot;)
	tmap:echo(&quot;Magnitude defaults to '1'.&quot;)
	tmap:showRoomLabels(0)
	return
end
local input = matches[2]
local labelnum, labeldir, labeldist
if string.find(input, &quot;%d %a+ %d&quot;) then
	local t = string.split(input, &quot; &quot;)
	labelnum = tonumber(t[1])
	labeldir = t[2]	
	labeldist = tonumber(t[3])
elseif string.find(input, &quot;%d %a+&quot;) then
	local t = string.split(input, &quot; &quot;)
	labelnum = tonumber(t[1])
	labeldir = t[2]
elseif string.find(input, &quot;%a+ %d&quot;) then
	local t = string.split(input, &quot; &quot;)
	labeldir = t[1]	
	labeldist = tonumber(t[2])
elseif string.find(input, &quot;%a+&quot;) then
	labeldir = input
else
	tmap:echo(&quot;Syntax: tmap movelabel &lt;labelnum&gt; &lt;direction&gt; &lt;magnitude&gt;&quot;)
	tmap:echo(&quot;If there is only one label in a room, labelnum is optional.&quot;)
	tmap:echo(&quot;Magnitude defaults to '1'.&quot;)
	return
end
if not labeldist then
	labeldist = 1
end
local lTable = tmap:getRoomLabels(tmap.lastId)
if #lTable &gt; 1 and not labelnum then
	tmap:showRoomLabels(1)
	return
end
local mdist = tmap:deepcopy(tmap.unitVectors[tmap.dirtypes[tmap.shortToLong[labeldir]]])
if not mdist then
	tmap:echo(&quot;Invalid direction: &quot;..labeldir)
	return
end
mdist[1] = mdist[1]*labeldist
mdist[2] = mdist[2]*labeldist
mdist[3] = mdist[3]*labeldist
if #lTable == 1 and lTable[1] ~= &quot;&quot; then
	tmap:moveRoomLabel(tmap.lastId,1,labeldir,table.concat(mdist,','))
elseif #lTable &gt; 1 and labelnum then
	if lTable[labelnum] then
		tmap:moveRoomLabel(tmap.lastId,labelnum,labeldir,table.concat(mdist,','))
	else
		tmap:echo(&quot;Label not found.&quot;);
	end
end</script>
                <command></command>
                <packageName></packageName>
                <regex>^tmap movelabel\s?(.+)?$</regex>
            </Alias>
            <Alias isActive="yes" isFolder="no">
                <name>Rename a label</name>
                <script>if not matches[2] then
	tmap:echo(&quot;Syntax: tmap renamelabel labelnum newname&quot;)
	tmap:echo(&quot;If there is only one label in a room, labelnum is optional.&quot;)
	tmap:showRoomLabels(0)
	return
end
local input = matches[2]
local labelnum, labelname
if string.find(input, &quot;%d %a+&quot;) then
	local t = string.split(input, &quot; &quot;)
	labelnum = t[1]
	labelname = t[2]
elseif string.find(input, &quot;%a+&quot;) then
	labelname = input
else
	tmap:echo(&quot;Syntax: tmap renamelabel labelnum newname&quot;)
	tmap:echo(&quot;If there is only one label in a room, labelnum is optional.&quot;)
	return
end
local lTable = tmap:getRoomLabels(tmap.lastId)
if #lTable &gt; 1 and not labelnum then
	tmap:showRoomLabels(1)
	return
end
if #lTable == 1 and lTable[1] ~= &quot;&quot; then
	tmap:renameRoomLabel(tmap.lastId,1, labelname)
elseif #lTabel &gt;1 and labelnum then
	if lTable[labelnum] then
		tmap:renameRoomLabel(tmap.lastId,labelnum, labelname)
	else
		tmap:echo(&quot;Label not found.&quot;);
	end
end</script>
                <command></command>
                <packageName></packageName>
                <regex>^tmap renamelabel\s?(.+)?$</regex>
            </Alias>
            <Alias isActive="yes" isFolder="no">
                <name>Delete a label</name>
                <script>local labelnum
local input = matches[2]
if input and string.find(input, &quot;%d&quot;) then
	local t = string.split(input, &quot; &quot;)
	labelnum = t[1]
elseif input then
	tmap:echo(&quot;Syntax: tmap deletelabel labelnum&quot;)
	tmap:echo(&quot;If there is only one label in a room, labelnum is optional.&quot;)
	tmap:showRoomLabels(0)
	return
end
local lTable = tmap:getRoomLabels(tmap.lastId)
if #lTable &gt; 1 and not labelnum then
	tmap:showRoomLabels(1)
	return
end
if #lTable == 1 and lTable[1] ~= &quot;&quot; then
	tmap:deleteRoomLabel(tmap.lastId,1)
elseif #lTabel &gt; 1 and labelnum then
	if lTable[labelnum] then
		tmap:deleteRoomLabel(tmap.lastId,labelnum)
	else
		tmap:echo(&quot;Label not found.&quot;);
	end
end</script>
                <command></command>
                <packageName></packageName>
                <regex>^tmap deletelabel\s?(.+)?$</regex>
            </Alias>
            <Alias isActive="yes" isFolder="no">
                <name>Make a label</name>
                <script>if not matches[2] then
	tmap:echo(&quot;Syntax: tmap addlabel direction message&quot;)
	return
end
local input = matches[2]
local labelnum, labeldir
if string.find(input, &quot;%a+ %a+&quot;) then
	local t = string.split(input, &quot; &quot;)
	labeldir = table.remove(t,1)
	labelname = table.concat(t, &quot; &quot;)
else
	tmap:echo(&quot;Syntax: tmap addlabel direction message&quot;)
	return
end
labeldist = 1
if not tmap.shortToLong[labeldir] then
	tmap:echo(&quot;Invalid direction: &quot;..labeldir)
	return
end
tmap:addRoomLabel(tmap.lastId,labeldir,labelname,labeldist)</script>
                <command></command>
                <packageName></packageName>
                <regex>^tmap addlabel\s(.+)$</regex>
            </Alias>
            <Alias isActive="yes" isFolder="no">
                <name>Exit Alias</name>
                <script>local exit = matches[2]
local alias = matches[3]
local exits = tmap:getAllExits(tmap.lastId)
local dtype = tmap.dirtypes[alias]
if not dtype then
	dtype = tmap.dirtable[alias]
end
for i,v in pairs(exits) do
	if (i == exit) then
		if not dtype then
		--special exit
			addSpecialExit(tmap.lastId,v,alias)
		else	
			setExit(tmap.lastId, v, dtype)
		end
	end
end</script>
                <command></command>
                <packageName></packageName>
                <regex>^tmap addalias &quot;(.+)&quot; (.+)$</regex>
            </Alias>
        </AliasGroup>
    </AliasGroup>
</AliasPackage>
<ActionPackage/>
<ScriptPackage/>
<KeyPackage/>
